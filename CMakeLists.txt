cmake_minimum_required(VERSION 3.13)

project(libnids)

option(ENABLE_TCPREASM "Enable TCP reasm" ON)
option(ADD_SAMPLES "Add samples" ON)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

set(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE})
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if(${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)
    set(CMAKE_CXX_FLAGS "/MP /W3")
    set(CMAKE_CXX_FLAGS_DEBUG "/Od /Ob0 /RTC1 /Zi /MDd /D_DEBUG")
    set(CMAKE_CXX_FLAGS_RELEASE "/O2 /Ob2 /Oi /Gy /GL /MD /DNDEBUG")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "/INCREMENTAL:NO /LTCG")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/INCREMENTAL:NO /LTCG")
elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
    set(CMAKE_CXX_FLAGS "-pipe -W -pthread")
    set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -D_DEBUG")
    set(CMAKE_CXX_FLAGS_RELEASE "-O3 -fno-strict-aliasing -DNDEBUG")
    set(CMAKE_BUILD_WITH_INSTALL_RPATH ON)
    set(CMAKE_INSTALL_RPATH "\${ORIGIN}")
endif()

set(CMAKE_C_FLAGS ${CMAKE_CXX_FLAGS})
set(CMAKE_C_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG})
set(CMAKE_C_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})

if(WIN32)
    set(PLATFORM _WINDOWS)
    add_compile_definitions(WIN32 WIN32_LEAN_AND_MEAN _CRT_SECURE_NO_WARNINGS LIBNET_VER=-1)
elseif(UNIX)
    set(PLATFORM _GNU)
    add_compile_definitions(LIBNET_VER=1 HAVE_ICMPHDR=1 HAVE_TCP_STATES=1 HAVE_LIBGTHREAD_2_0=1)
endif()

if(ENABLE_TCPREASM)
    add_compile_definitions(ENABLE_TCPREASM)
endif()

add_compile_definitions(${PLATFORM} _BSD_SOURCE __BSD_SOURCE __FAVOR_BSD HAVE_NET_ETHERNET_H HAVE_BSD_UDPHDR=1)

set(BIN_DIR ${CMAKE_SOURCE_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BIN_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${BIN_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_DIR})

add_subdirectory(src)

if(ADD_SAMPLES)
    add_subdirectory(samples)
endif()
